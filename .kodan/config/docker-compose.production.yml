services:
  database:
    image: docker.io/pgvector/pgvector:pg15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - khoj_db:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - khoj_network

  sandbox:
    image: ghcr.io/khoj-ai/terrarium:latest
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 2
    restart: unless-stopped
    networks:
      - khoj_network

  search:
    image: docker.io/searxng/searxng:latest
    volumes:
      - khoj_search:/etc/searxng
    environment:
      - SEARXNG_BASE_URL=http://localhost:8080/
    restart: unless-stopped
    networks:
      - khoj_network

  server:
    depends_on:
      database:
        condition: service_healthy
    image: ghcr.io/khoj-ai/khoj:2.0.0-beta.13
    ports:
      - "42110:42110"
    volumes:
      - khoj_config:/app/config
      - khoj_models:/app/models
      - ./pyproject.toml:/app/pyproject.toml
      - ./taskmaster_project.json:/app/taskmaster_project.json
      - ./.taskmaster:/app/.taskmaster
    environment:
      - KHOJ_CONFIG_PATH=/app/config/khoj.yml
      - KHOJ_ANALYTICS_OPTOUT=true
      - KHOJ_PUBLIC_SHARE=False
      - KHOJ_GUI_MODE=True
      - KHOJ_HOST=0.0.0.0
      - KHOJ_PORT=42110
      - KHOJ_WEB_APP_URL=https://kodan.space
      - KHOJ_POSTGRES_USER=postgres
      - KHOJ_POSTGRES_PASSWORD=postgres
      - KHOJ_POSTGRES_HOST=database
      - KHOJ_POSTGRES_PORT=5432
      - KHOJ_POSTGRES_DB=postgres
      - KHOJ_TELEMETRY_DISABLE=True
      - KHOJ_TERRARIUM_URL=http://sandbox:8080
      - KHOJ_SEARXNG_URL=http://search:8080
      - RESEND_API_KEY=re_ds7u99gf_H6BqMbvHC4pz7HpwjS8hGbNV
      - RESEND_EMAIL=noreply@kodan.space
    command: --host="0.0.0.0" --port=42110 -vv --non-interactive
    restart: unless-stopped
    networks:
      - khoj_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.server.loadbalancer.server.port=42110"

  n8n:
    image: nginx:alpine
    restart: unless-stopped
    expose:
      - "5678"
    networks:
      - khoj_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
    volumes:
      - ../files/nginx-n8n.conf:/etc/nginx/nginx.conf

  mcp:
    image: ghcr.io/photonentangled/aletheia-mcp:0.0.1
    restart: unless-stopped
    networks:
      - khoj_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.mcp.loadbalancer.server.port=65432"
    environment:
      - TASKMASTER_PROJECT_ROOT=/app
      - OPENROUTER_API_KEY=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
    volumes:
      - ./pyproject.toml:/app/pyproject.toml
      - ./taskmaster_project.json:/app/taskmaster_project.json
      - ./.taskmaster:/app/.taskmaster

networks:
  khoj_network:
    driver: bridge

volumes:
  khoj_config:
  khoj_db:
  khoj_models:
  khoj_search:
